generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model courses {
  id               Int                @id @default(autoincrement())
  name             String
  duration         Int                @default(1)
  faculty          faculty[]
  students_courses students_courses[]
}

model faculty {
  id        Int       @id @default(autoincrement())
  name      String
  join_date DateTime?
  course_id Int
  courses   courses   @relation(fields: [course_id], references: [id])
}

model students {
  id               Int                @id @default(autoincrement())
  name             String
  email            String
  student_id       String             @unique
  admission_date   DateTime           @default(now())
  details          String
  description      String
  students_courses students_courses[]
}

model students_courses {
  course_id   Int
  student_id  Int
  assigned_at DateTime @default(now())
  courses     courses  @relation(fields: [course_id], references: [id])
  students    students @relation(fields: [student_id], references: [id])

  @@id([course_id, student_id])
}

model users {
  id         String     @id
  user_name  String
  password   String?
  email      String
  first_name String
  last_name  String
  salt       String?
  active     Boolean    @default(true)
  deleted    Boolean    @default(false)
  updated_at DateTime?
  created_at DateTime?  @default(now())
  created_by String?
  updated_by String?
  products   products[]
}

model categories {
  id         String     @id
  name       String
  created_at DateTime?  @default(now())
  created_by String?
  updated_by String?
  updated_at DateTime?
  deleted    Boolean    @default(false)
  active     Boolean    @default(true)
  products   products[]
}

model products {
  id          String     @id
  name        String
  description String
  price       Float
  category_id String
  user_id     String
  created_at  DateTime?  @default(now())
  created_by  String?
  updated_by  String?
  updated_at  DateTime?
  deleted     Boolean    @default(false)
  active      Boolean    @default(true)
  price_sale  Float
  sn          String
  categories  categories @relation(fields: [category_id], references: [id])
  users       users      @relation(fields: [user_id], references: [id])
}
